Commonly used Constructors of thread class:
Thread()
Thread(String name)
Thread(Runnable r)
Thread(Runnable r, String name)
not sure : Thread

ThreadScheduler:
Thread scheduler in java is the part of the JVM that decides which thread should run
The thread scheduler mainly uses preemptive(priority) or time slicing(some time for one and then other) scheduling to schedule the threads.

Calling run() method directly:
Each thread starts in a separate call stack.
Invoking the run() method from main thread,
 the run() method goes onto the current call stack rather than at the beginning of a new call stack.
obj.run()//fine, but does not start a separate call stack 
**will be treated as normal objects

**join(), join(long milliseconds): throws InteruptedException
The join() method waits for a thread to die. In other words,
 it causes the currently running threads to stop executing until the thread it joins with completes its task.

**currentThread:The currentThread() method returns a reference of currently executing thread.

**Thread Priority : 1-10 (default 5) {executes low to high}

3 constants defined in Thread class:
public static int MIN_PRIORITY
public static int NORM_PRIORITY
public static int MAX_PRIORITY

**Daemon Thread:
Daemon thread in java is a service provider thread that provides services to the user thread.
 Its life depend on the mercy of user threads i.e. when all the user threads dies, JVM terminates this thread automatically.

There are many java daemon threads running automatically e.g. gc, finalizer etc.

java.lang.Thread provide two methods for Daemon Thread:

public void setDaemon(booleam status):is used to mark the current thread as daemon thread or user thread.
public boolean isDaemon():	is used to check that current is daemon


next ?? prev
**Java Thread Pool
Java Thread pool represents a group of worker threads that are waiting for the job and reuse many times
Better performance It saves time because there is no need to create new thread.
It is used in Servlet and JSP where container creates a thread pool to process the request.

A ThreadGroup represents a set of threads. A thread group can also include the other thread group. The thread group creates a tree in which every thread group except the initial thread group has a parent.

**ThreadGroup:
A thread is allowed to access information about its own thread group,
 but it cannot access the 
information about its thread group's parent thread group or any other thread groups.

java.lang.ThreadGroup class
Two Constructos of threa group:
!. ThreadGroup(String name) :creates a thread group with given name.
2. ThreadGroup(ThreadGroup parent, String name) : creates a thread group with given parent group and name.

